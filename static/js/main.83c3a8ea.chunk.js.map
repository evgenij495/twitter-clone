{"version":3,"sources":["firebase.js","components/AuthForm.jsx","components/AuthProvider.jsx","routes/Auth.jsx","components/EditModal.jsx","components/Tweet.jsx","hooks/useFirestorage.js","components/TweetForm.jsx","hooks/useFirestore.js","routes/Home.jsx","routes/Profile.jsx","components/Header.jsx","components/Nav.jsx","components/Router.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseAuth","auth","firebaseStore","firestore","firebaseStorage","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","handleChange","e","name","target","value","handleSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","onSubmit","type","placeholder","required","onChange","onClick","prev","AuthProvider","handleSocialClick","provider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","Auth","EditModal","editTweet","setUpdatedTweet","setShouldModalOpen","Tweet","tweet","isCreator","deleteTweet","openEditModal","url","src","alt","text","id","useFirestorage","currentUser","file","setUrl","useEffect","storageRef","ref","put","on","getDownloadURL","TweetForm","addTweet","setTweet","setFile","htmlFor","accept","files","refFromURL","delete","useFirestore","tweets","setTweets","unsub","collection","orderBy","onSnapshot","snap","docs","map","doc","Home","shouldModalOpen","targetTweet","setTargetTweet","updatedTweet","window","confirm","add","createdAt","Date","now","creatorId","uid","update","Profile","refreshCurrentUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Header","to","Nav","Router","isLoggedIn","exact","path","component","App","init","setInit","setIsLoggedIn","setCurrentUser","onAuthStateChanged","user","argg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83c3a8ea.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst firebaseAuth = firebase.auth();\nconst firebaseStore = firebase.firestore();\nconst firebaseStorage = firebase.storage();\n\nexport { firebase, firebaseAuth, firebaseStore, firebaseStorage };\n","import React, { useState } from 'react';\nimport { firebaseAuth } from '../firebase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await firebaseAuth.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await firebaseAuth.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <div className=\"auth-form\">\n      <form onSubmit={handleSubmit}>\n        <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={handleChange} />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className=\"input-submit\">\n          {newAccount ? 'Sign Up' : 'Sign In'}{' '}\n        </button>\n        {error}\n\n        <button onClick={toggleAccount} className=\"auth-switch\">\n          {newAccount ? 'Log In' : 'Sign Up'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { firebase } from '../firebase';\nimport { firebaseAuth } from '../firebase';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaFacebook } from 'react-icons/fa';\n\nconst AuthProvider = () => {\n  const handleSocialClick = async (e) => {\n    const {\n      target: { name }\n    } = e;\n\n    let provider;\n    if (name === 'google') {\n      provider = new firebase.auth.GoogleAuthProvider();\n    } else if (name === 'facebook') {\n      provider = new firebase.auth.FacebookAuthProvider();\n    }\n\n    const data = await firebaseAuth.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"auth-provider\">\n      <button className=\"provider_btn google\" name=\"google\" onClick={handleSocialClick}>\n        <FcGoogle className=\"social-icon\" />\n        Continue with Google\n      </button>\n      <button className=\"provider_btn facebook\" name=\"facebook\" onClick={handleSocialClick}>\n        <FaFacebook className=\"social-icon\" />\n        Continue with Facebook\n      </button>\n    </div>\n  );\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport AuthForm from '../components/AuthForm';\nimport AuthProvider from '../components/AuthProvider';\n\nconst Auth = () => {\n  return (\n    <>\n      <AuthForm />\n      <AuthProvider />\n    </>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nconst EditModal = ({ editTweet, setUpdatedTweet, setShouldModalOpen }) => {\n  return (\n    <form onSubmit={(e) => editTweet(e)}>\n      <input type=\"text\" onChange={(e) => setUpdatedTweet(e.target.value)} />\n      <input type=\"submit\" value=\"Update tweet\" />\n      <button type=\"submit\" onClick={() => setShouldModalOpen(false)}>\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nexport default EditModal;\n","import React from 'react';\nimport { RiDeleteBinLine } from 'react-icons/ri';\nimport { FiEdit2 } from 'react-icons/fi';\n\nconst Tweet = ({ tweet, isCreator, deleteTweet, openEditModal }) => {\n  return (\n    <li className=\"tweet\">\n      <div className=\"row-1\">{tweet.url && <img src={tweet.url} alt=\"img\" />}</div>{' '}\n      <div className=\"row-2\">\n        <span className=\"tweet__text\">{tweet.text}</span>\n        {isCreator && (\n          <>\n            <RiDeleteBinLine className=\"icon delete-icon\" onClick={() => deleteTweet(tweet.id, tweet.url)} />\n            <FiEdit2 className=\"icon\" onClick={() => openEditModal(tweet)} />\n          </>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default Tweet;\n","import { useState, useEffect } from 'react';\nimport { firebaseStorage } from '../firebase';\n\nconst useFirestorage = (currentUser, file) => {\n  const [url, setUrl] = useState('');\n\n  useEffect(() => {\n    if (file) {\n      const storageRef = firebaseStorage.ref(`${currentUser.email}/${file.name}`);\n      storageRef.put(file).on('state_change', null, null, async () => {\n        const url = await storageRef.getDownloadURL();\n        setUrl(url);\n      });\n    }\n  }, [file, currentUser]);\n\n  return [url, setUrl];\n};\n\nexport default useFirestorage;\n","import React, { useState } from 'react';\nimport useFirestorage from '../hooks/useFirestorage';\nimport { firebaseStorage } from '../firebase';\nimport { FaArrowRight } from 'react-icons/fa';\nimport { IoMdAddCircle } from 'react-icons/io';\n\nconst TweetForm = ({ currentUser, addTweet }) => {\n  const [text, setTweet] = useState('');\n  const [file, setFile] = useState(null);\n  const [url, setUrl] = useFirestorage(currentUser, file);\n\n  const handleInput = (e) => {\n    setTweet(e.target.value);\n  };\n\n  const handleFileUpload = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (text || url) {\n      addTweet(text, url);\n      setFile(null);\n      setUrl('');\n      setTweet('');\n    }\n  };\n\n  const handleCloseImg = () => {\n    setFile(null);\n    setUrl('');\n    firebaseStorage.refFromURL(url).delete();\n  };\n\n  return (\n    <div className=\"tweet-form-container\">\n      <form onSubmit={handleSubmit} className=\"tweet-form\">\n        <div className=\"row-1\">\n          <input\n            type=\"text\"\n            className=\"input-text\"\n            value={text}\n            onChange={handleInput}\n            placeholder=\"what's on your mind?\"\n          />\n          <button type=\"submit\" className=\"input-submit\">\n            <FaArrowRight />\n          </button>\n        </div>\n\n        <div className=\"row-2\">\n          <label htmlFor=\"add-photo\" className=\"add-photo-label\">\n            <span>Add photo</span>\n            <IoMdAddCircle className=\"add-photo-icon\" />\n          </label>\n          <input\n            id=\"add-photo\"\n            className=\"add-photo-input\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileUpload}\n          />\n        </div>\n      </form>\n\n      {file && (\n        <div className=\"photo-snippet-container\">\n          <img src={url} alt=\"img\" />\n          <button onClick={handleCloseImg}>Clear</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TweetForm;\n","import { useState, useEffect } from 'react';\nimport { firebaseStore } from '../firebase';\n\nconst useFirestore = () => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    const unsub = firebaseStore\n      .collection('tweets')\n      .orderBy('createdAt', 'asc')\n      .onSnapshot((snap) => {\n        const tweets = snap.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n        setTweets(tweets);\n      });\n\n    return () => unsub();\n  }, []);\n\n  return tweets;\n};\n\nexport default useFirestore;\n","import React, { useState } from 'react';\nimport EditModal from '../components/EditModal';\nimport Tweet from '../components/Tweet';\nimport TweetForm from '../components/TweetForm';\nimport { firebaseStore, firebaseStorage } from '../firebase';\nimport useFirestore from '../hooks/useFirestore';\n\nconst Home = ({ currentUser }) => {\n  const tweets = useFirestore();\n  const [shouldModalOpen, setShouldModalOpen] = useState(false);\n  const [targetTweet, setTargetTweet] = useState(null);\n  const [updatedTweet, setUpdatedTweet] = useState('');\n\n  const addTweet = (text, url) => {\n    firebaseStore.collection('tweets').add({ text, url, createdAt: Date.now(), creatorId: currentUser.uid });\n  };\n\n  const deleteTweet = (id, url) => {\n    let isOk = window.confirm('Are you sure you want to delete ?');\n    if (isOk) {\n      firebaseStore.collection('tweets').doc(id).delete();\n      if (url) {\n        firebaseStorage.refFromURL(url).delete();\n      }\n    } else {\n    }\n  };\n\n  const editTweet = (e) => {\n    e.preventDefault();\n    firebaseStore.collection('tweets').doc(targetTweet.id).update({ text: updatedTweet });\n    setShouldModalOpen(false);\n    setUpdatedTweet('');\n  };\n\n  const openEditModal = (tweet) => {\n    setShouldModalOpen(true);\n    setTargetTweet(tweet);\n  };\n\n  return (\n    <div className=\"home\">\n      <TweetForm currentUser={currentUser} addTweet={addTweet} />\n      <ul className=\"tweets\">\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweet={tweet}\n            isCreator={tweet.creatorId === currentUser.uid}\n            deleteTweet={deleteTweet}\n            openEditModal={openEditModal}\n          />\n        ))}\n      </ul>\n      {shouldModalOpen && (\n        <EditModal\n          updatedTweet={updatedTweet}\n          editTweet={editTweet}\n          setUpdatedTweet={setUpdatedTweet}\n          setShouldModalOpen={setShouldModalOpen}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { firebaseAuth } from '../firebase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ currentUser, refreshCurrentUser }) => {\n  let history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(currentUser.displayName);\n\n  const handleLogOut = () => {\n    firebaseAuth.signOut();\n    history.push('/');\n  };\n\n  const handleDisplayName = (e) => {\n    setNewDisplayName(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (newDisplayName !== currentUser.displayName) {\n      await currentUser.updateProfile({ displayName: newDisplayName });\n      refreshCurrentUser();\n    }\n  };\n\n  return (\n    <div className=\"profile\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={handleDisplayName} />\n        <input type=\"submit\" value=\"Update profile\" className=\"input-submit\" />\n      </form>\n      <span className=\"line\"></span>\n      <button onClick={handleLogOut} className=\"logout-btn\">\n        Log Out\n      </button>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaTwitter } from 'react-icons/fa';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\" className=\"link_home\">\n        <FaTwitter className=\"link_icon\" />\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\n\nconst Nav = ({ currentUser }) => {\n  let displayName;\n  if (currentUser) {\n    displayName = currentUser.displayName ? currentUser.displayName : currentUser.email;\n  } else {\n    displayName = null;\n  }\n\n  return (\n    <nav>\n      <Link to=\"/profile\" className=\"link_profile\">\n        <FaUser className=\"link_icon\" />\n        {displayName}\n      </Link>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Header from './Header';\nimport Nav from './Nav';\n\nconst Router = ({ isLoggedIn, currentUser, refreshCurrentUser }) => {\n  return (\n    <HashRouter>\n      <Header />\n      {isLoggedIn && <Nav currentUser={currentUser} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\" component={() => <Home currentUser={currentUser} />} />\n            <Route\n              exact\n              path=\"/profile\"\n              component={() => <Profile currentUser={currentUser} refreshCurrentUser={refreshCurrentUser} />}\n            />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\" component={Auth} />\n          </>\n        )}\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React, { useState, useEffect } from 'react';\nimport './styles/styles.scss';\nimport { firebaseAuth } from './firebase';\nimport Router from './components/Router';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setCurrentUser(user);\n        setCurrentUser({\n          displayName: user.displayName,\n          email: user.email,\n          uid: user.uid,\n          updateProfile: (argg) => user.updateProfile(argg)\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshCurrentUser = () => {\n    setCurrentUser(firebaseAuth.currentUser);\n  };\n\n  return (\n    <div className=\"App\">\n      {init ? (\n        <Router isLoggedIn={isLoggedIn} currentUser={currentUser} refreshCurrentUser={refreshCurrentUser} />\n      ) : (\n        <h3 className=\"init-message\">initializing..</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}