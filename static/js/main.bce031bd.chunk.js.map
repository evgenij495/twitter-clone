{"version":3,"sources":["firebase.js","components/AuthForm.jsx","components/AuthProvider.jsx","routes/Auth.jsx","components/EditModal.jsx","components/Tweet.jsx","components/TweetForm.jsx","hooks/firebaseHooks.js","routes/Home.jsx","routes/Profile.jsx","components/Nav.jsx","components/Router.jsx","App.jsx","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","REACT_APP_APP_ID","firebase","initializeApp","firebaseAuth","auth","firebaseStore","firestore","firebaseStorage","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","handleChange","e","name","target","value","handleSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSubmit","type","placeholder","required","onChange","onClick","prev","AuthProvider","handleSocialClick","provider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","Auth","EditModal","editTweet","setUpdatedTweet","setShouldModalOpen","Tweet","tweet","isCreator","deleteTweet","openEditModal","className","text","url","src","width","height","alt","id","TweetForm","currentUser","addTweet","setTweet","file","setFile","setUrl","useEffect","storageRef","ref","put","on","getDownloadURL","useStorage","accept","files","refFromURL","delete","Home","tweets","setTweets","unsub","collection","orderBy","onSnapshot","snap","docs","map","doc","useStore","shouldModalOpen","targetTweet","setTargetTweet","updatedTweet","window","confirm","add","createdAt","Date","now","creatorId","uid","update","Profile","refreshCurrentUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Nav","to","Router","isLoggedIn","exact","path","component","App","init","setInit","setIsLoggedIn","setCurrentUse","onAuthStateChanged","user","argg","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bce031bd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst firebaseAuth = firebase.auth();\nconst firebaseStore = firebase.firestore();\nconst firebaseStorage = firebase.storage();\n\nexport { firebase, firebaseAuth, firebaseStore, firebaseStorage };\n","import React, { useState } from 'react';\nimport { firebaseAuth } from '../firebase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await firebaseAuth.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await firebaseAuth.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={handleChange} />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={handleChange}\n        />\n        <input type=\"submit\" value={newAccount ? 'Sign Up' : 'Sign In'} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? 'Sign In' : 'Sign Up'}</span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { firebase } from '../firebase';\nimport { firebaseAuth } from '../firebase';\n\nconst AuthProvider = () => {\n  const handleSocialClick = async (e) => {\n    const {\n      target: { name }\n    } = e;\n\n    let provider;\n    if (name === 'google') {\n      provider = new firebase.auth.GoogleAuthProvider();\n    } else if (name === 'facebook') {\n      provider = new firebase.auth.FacebookAuthProvider();\n    }\n\n    const data = await firebaseAuth.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <button name=\"google\" onClick={handleSocialClick}>\n        Continue with Google\n      </button>\n      <button name=\"facebook\" onClick={handleSocialClick}>\n        Continue with Facebook\n      </button>\n    </div>\n  );\n};\n\nexport default AuthProvider;\n","import React from 'react';\nimport AuthForm from '../components/AuthForm';\nimport AuthProvider from '../components/AuthProvider';\n\nconst Auth = () => {\n  return (\n    <div>\n      <AuthForm />\n      <AuthProvider />\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nconst EditModal = ({ editTweet, setUpdatedTweet, setShouldModalOpen }) => {\n  return (\n    <form onSubmit={(e) => editTweet(e)}>\n      <input type=\"text\" onChange={(e) => setUpdatedTweet(e.target.value)} />\n      <input type=\"submit\" value=\"Update tweet\" />\n      <button type=\"submit\" onClick={() => setShouldModalOpen(false)}>\n        Cancel\n      </button>\n    </form>\n  );\n};\n\nexport default EditModal;\n","import React from 'react';\n\nconst Tweet = ({ tweet, isCreator, deleteTweet, openEditModal }) => {\n  return (\n    <>\n      <li>\n        <span className=\"text\">{tweet.text}</span>\n        {tweet.url && <img src={tweet.url} width=\"50px\" height=\"50px\" alt=\"img\" />}\n        {isCreator && (\n          <>\n            <button onClick={() => deleteTweet(tweet.id, tweet.url)} className=\"delete\">\n              delete\n            </button>\n            <button onClick={() => openEditModal(tweet)} className=\"edit\">\n              edit\n            </button>\n          </>\n        )}\n      </li>\n    </>\n  );\n};\n\nexport default Tweet;\n","import React, { useState } from 'react';\nimport { useStorage } from '../hooks/firebaseHooks';\nimport { firebaseStorage } from '../firebase';\n\nconst TweetForm = ({ currentUser, addTweet }) => {\n  const [text, setTweet] = useState('');\n  const [file, setFile] = useState(null);\n  const [url, setUrl] = useStorage(currentUser, file);\n\n  const handleInput = (e) => {\n    setTweet(e.target.value);\n  };\n\n  const handleFileUpload = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (text || url) {\n      addTweet(text, url);\n      setFile(null);\n      setUrl('');\n      setTweet('');\n    }\n  };\n\n  const handleCloseImg = () => {\n    setFile(null);\n    setUrl('');\n    firebaseStorage.refFromURL(url).delete();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={text} onChange={handleInput} placeholder=\"what's on your mind?\" />\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileUpload} />\n        <input type=\"submit\" />\n      </form>\n      {file && (\n        <div>\n          <img src={url} width=\"50px\" height=\"50px\" alt=\"img\" />\n          <button onClick={handleCloseImg}>Clear</button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TweetForm;\n","import { useState, useEffect } from 'react';\nimport { firebaseStore, firebaseStorage } from '../firebase';\n\nconst useStore = () => {\n  const [tweets, setTweets] = useState([]);\n\n  useEffect(() => {\n    const unsub = firebaseStore\n      .collection('tweets')\n      .orderBy('createdAt', 'asc')\n      .onSnapshot((snap) => {\n        const tweets = snap.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n        setTweets(tweets);\n      });\n\n    return () => unsub();\n  }, []);\n\n  return tweets;\n};\n\nconst useStorage = (currentUser, file) => {\n  const [url, setUrl] = useState('');\n\n  useEffect(() => {\n    if (file) {\n      const storageRef = firebaseStorage.ref(`${currentUser.email}/${file.name}`);\n      storageRef.put(file).on('state_change', null, null, async () => {\n        const url = await storageRef.getDownloadURL();\n        setUrl(url);\n      });\n    }\n  }, [file, currentUser]);\n\n  return [url, setUrl];\n};\n\nexport { useStore, useStorage };\n","import React, { useState } from 'react';\nimport EditModal from '../components/EditModal';\nimport Tweet from '../components/Tweet';\nimport TweetForm from '../components/TweetForm';\nimport { firebaseStore, firebaseStorage } from '../firebase';\nimport { useStore } from '../hooks/firebaseHooks';\n\nconst Home = ({ currentUser }) => {\n  const tweets = useStore();\n  const [shouldModalOpen, setShouldModalOpen] = useState(false);\n  const [targetTweet, setTargetTweet] = useState(null);\n  const [updatedTweet, setUpdatedTweet] = useState('');\n\n  const addTweet = (text, url) => {\n    firebaseStore.collection('tweets').add({ text, url, createdAt: Date.now(), creatorId: currentUser.uid });\n  };\n\n  const deleteTweet = (id, url) => {\n    let isOk = window.confirm('Are you sure you want to delete ?');\n    if (isOk) {\n      firebaseStore.collection('tweets').doc(id).delete();\n      if (url) {\n        firebaseStorage.refFromURL(url).delete();\n      }\n    } else {\n    }\n  };\n\n  const editTweet = (e) => {\n    e.preventDefault();\n    firebaseStore.collection('tweets').doc(targetTweet.id).update({ text: updatedTweet });\n    setShouldModalOpen(false);\n    setUpdatedTweet('');\n  };\n\n  const openEditModal = (tweet) => {\n    setShouldModalOpen(true);\n    setTargetTweet(tweet);\n  };\n\n  return (\n    <div>\n      <TweetForm currentUser={currentUser} addTweet={addTweet} />\n      <ul>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweet={tweet}\n            isCreator={tweet.creatorId === currentUser.uid}\n            deleteTweet={deleteTweet}\n            openEditModal={openEditModal}\n          />\n        ))}\n      </ul>\n      {shouldModalOpen && (\n        <EditModal\n          updatedTweet={updatedTweet}\n          editTweet={editTweet}\n          setUpdatedTweet={setUpdatedTweet}\n          setShouldModalOpen={setShouldModalOpen}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { firebaseAuth } from '../firebase';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ currentUser, refreshCurrentUser }) => {\n  let history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(currentUser.displayName);\n\n  const handleLogOut = () => {\n    firebaseAuth.signOut();\n    history.push('/');\n  };\n\n  const handleDisplayName = (e) => {\n    setNewDisplayName(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (newDisplayName !== currentUser.displayName) {\n      await currentUser.updateProfile({ displayName: newDisplayName });\n      refreshCurrentUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={handleDisplayName} />\n        <input type=\"submit\" value=\"Update profile\" />\n      </form>\n      <button onClick={handleLogOut}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Nav = ({ currentUser }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{currentUser ? currentUser.displayName : 'My Profile'}</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Profile from '../routes/Profile';\nimport Nav from './Nav';\n\nconst Router = ({ isLoggedIn, currentUser, refreshCurrentUser }) => {\n  return (\n    <HashRouter>\n      {isLoggedIn && <Nav currentUser={currentUser} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\" component={() => <Home currentUser={currentUser} />} />\n            <Route\n              exact\n              path=\"/profile\"\n              component={() => <Profile currentUser={currentUser} refreshCurrentUser={refreshCurrentUser} />}\n            />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\" component={Auth} />\n          </>\n        )}\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import React, { useState, useEffect } from 'react';\nimport { firebaseAuth } from './firebase';\nimport Router from './components/Router';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUse] = useState(null);\n\n  useEffect(() => {\n    firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setCurrentUse(user);\n        setCurrentUse({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (argg) => user.updateProfile(argg)\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshCurrentUser = () => {\n    setCurrentUse(firebaseAuth.currentUser);\n  };\n\n  return (\n    <div className=\"App\">\n      {init ? (\n        <Router isLoggedIn={isLoggedIn} currentUser={currentUser} refreshCurrentUser={refreshCurrentUser} />\n      ) : (\n        'initializing..'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}